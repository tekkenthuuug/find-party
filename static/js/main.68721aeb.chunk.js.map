{"version":3,"sources":["components/HomePage/background-vid.mp4","serviceWorker.ts","index.tsx","vars.ts","components/Form/Form.tsx","components/Loading/Loading.tsx","components/TextInput/TextInput.tsx","components/HomePage/HomePage.tsx","components/SideBar/SideBar.tsx","components/TopBar/TopBar.tsx","components/Navigation/Navigation.tsx","ProtectedRoute.tsx","containers/CreateEvent/CreateEvent.tsx","components/EventPage/EventPage.tsx","containers/SettingsPage/SettingsPage.tsx","App.tsx","components/CommentsBlock/CommentsBlock.tsx","components/NotFound/NotFound.tsx"],"names":["module","exports","Boolean","window","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","SERVER_URL","Form","headTitle","formik","sections","submitButtonText","subTitle","className","onSubmit","handleSubmit","values","error","map","section","index","key","title","fields","field","name","initialVal","placeholder","handleChange","errors","twoColumns","multiline","type","disabled","isSubmitting","isValidating","style","animation","Loading","backgroundColor","spinnerSize","containerHeight","marginTop","height","width","theme","createMuiTheme","overrides","MuiTextField","root","borderRadius","color","fontFamily","borderColor","React","memo","inputType","gridColumnStart","gridColumnEnd","undefined","value","label","variant","onChange","rows","video","require","HomePage","autoPlay","muted","loop","id","src","to","useStyles","makeStyles","list","paper","SideBar","userID","drawerOpened","toggleDrawer","classes","SideLinks","path","icon","Drawer","open","onClose","role","onClick","onKeyDown","List","item","activeStyle","ListItem","button","ListItemIcon","ListItemText","primary","createStyles","menuButton","marginRight","spacing","flexGrow","TopBar","setUser","news","history","useHistory","handleClose","setAnchorEl","useState","anchorEl","AppBar","position","Toolbar","IconButton","edge","aria-label","Typography","aria-controls","aria-haspopup","event","currentTarget","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","component","Link","sessionStorage","removeItem","username","push","setDrawerOpened","content","link","ProtectedRoute","Component","rest","props","pathname","state","from","CreateEvent","user","useContext","UserContext","useFormik","initialValues","contact","description","country","city","validate","length","setSubmitting","fetch","method","headers","body","JSON","stringify","creatorID","creatorName","r","json","data","EventPage","eventID","setEvent","isEnrolled","setIsEndrolled","useEffect","enrolledusers","includes","CommentsBlock","target","loadingMarginTop","NotFound","errorMessage","SettingsPage","setValues","lazy","Feed","UserProfile","Register","Login","initialUser","getItem","createContext","basename","process","fallback","Provider","exact","SettingPage","params","profileComments","setProfileComments","fetching","setFetching","comment","setComment","senderID","senderName","display","alignItems","targetID","commentsClone","unshift","marginLeft","ErrorScreen","goBack"],"mappings":"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","file":"static/js/main.68721aeb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background-vid.013a0b2e.mp4\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const SERVER_URL: string = 'https://find-party-api.herokuapp.com';\r\n","import React, { Fragment } from 'react';\r\nimport TextInput from '../TextInput/TextInput';\r\nimport CachedRoundedIcon from '@material-ui/icons/CachedRounded';\r\nimport ArrowRightAltRoundedIcon from '@material-ui/icons/ArrowRightAltRounded';\r\nimport { FormikValues } from 'formik';\r\nimport { Section } from '../../types/types';\r\nimport './Form.scss';\r\n\r\ninterface IForm {\r\n  headTitle: string;\r\n  subTitle?: string | JSX.Element;\r\n  sections: Section[];\r\n  submitButtonText: string;\r\n  formik: FormikValues;\r\n}\r\n\r\nconst Form: React.FC<IForm> = ({ headTitle, formik, sections, submitButtonText, subTitle }) => {\r\n  return (\r\n    <div className=\"form-container\">\r\n      <div className=\"form-box\">\r\n        <h1>{headTitle}</h1>\r\n        {subTitle ? <p>{subTitle}</p> : null}\r\n        <form onSubmit={formik.handleSubmit} className=\"form\">\r\n          {formik.values.error ? <div className=\"form-error\">{formik.values.error}</div> : null}\r\n          {sections.map((section, index) => {\r\n            return (\r\n              <Fragment key={index}>\r\n                {section.title ? <h2>{section.title}</h2> : null}\r\n                <div className=\"input-section\">\r\n                  {section.fields.map((field) => {\r\n                    return (\r\n                      <TextInput\r\n                        key={field.name}\r\n                        initialVal={formik.values[field.name]}\r\n                        placeholder={field.placeholder}\r\n                        handleChange={formik.handleChange}\r\n                        name={field.name}\r\n                        error={formik.errors[field.name] || null}\r\n                        twoColumns={field.twoColumns}\r\n                        multiline={field.multiline}\r\n                      />\r\n                    );\r\n                  })}\r\n                </div>\r\n              </Fragment>\r\n            );\r\n          })}\r\n          <button className=\"submit-button\" type=\"submit\" disabled={formik.isSubmitting}>\r\n            <span>{submitButtonText}</span>\r\n            {formik.isSubmitting || formik.isValidating ? (\r\n              <CachedRoundedIcon style={{ animation: 'spin 1s linear infinite' }} />\r\n            ) : (\r\n              <ArrowRightAltRoundedIcon />\r\n            )}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport './Loading.scss';\r\n\r\ninterface ILoading {\r\n  backgroundColor?: string;\r\n  spinnerSize?: string;\r\n  containerHeight?: string;\r\n  marginTop?: string;\r\n}\r\n\r\nconst Loading: React.FC<ILoading> = ({\r\n  backgroundColor = '#1D1D21',\r\n  spinnerSize = '100px',\r\n  containerHeight = '100vh',\r\n  marginTop = '0'\r\n}) => {\r\n  return (\r\n    <div style={{ backgroundColor, height: containerHeight }} className=\"loading-screen\">\r\n      <div className=\"spin\" style={{ width: spinnerSize, height: spinnerSize, marginTop }}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport './TextInput.scss';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\n\r\ninterface ITextInput {\r\n  placeholder: string;\r\n  handleChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  inputType?: string;\r\n  name?: string;\r\n  error?: string | null;\r\n  twoColumns?: boolean;\r\n  multiline?: number;\r\n  initialVal?: string;\r\n}\r\n\r\nconst theme = createMuiTheme({\r\n  overrides: {\r\n    MuiTextField: {\r\n      root: {\r\n        backgroundColor: '#2ba296',\r\n        borderRadius: '3px',\r\n        width: '100%',\r\n        '& *': {\r\n          color: 'rgba(255,255,255, 0.8)',\r\n          fontFamily: 'Roboto Mono'\r\n        },\r\n        '& .MuiInputLabel-shrink': {\r\n          color: 'rgb(140, 245, 154)',\r\n          fontFamily: 'Roboto Mono'\r\n        },\r\n        '& .MuiFilledInput-underline:after': {\r\n          borderColor: 'rgb(140, 245, 154)'\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nconst TextInput: React.FC<ITextInput> = ({\r\n  placeholder,\r\n  handleChange,\r\n  inputType = 'text',\r\n  name,\r\n  error,\r\n  twoColumns,\r\n  multiline,\r\n  initialVal\r\n}) => {\r\n  return (\r\n    <div style={twoColumns ? { gridColumnStart: '1', gridColumnEnd: '3' } : undefined}>\r\n      <div className=\"error\">{error ? error : null}</div>\r\n      <ThemeProvider theme={theme}>\r\n        <TextField\r\n          value={initialVal}\r\n          label={placeholder}\r\n          variant=\"filled\"\r\n          type={inputType}\r\n          onChange={handleChange}\r\n          name={name}\r\n          color=\"primary\"\r\n          multiline={Boolean(multiline)}\r\n          rows={multiline}\r\n        />\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(TextInput);\r\n","import React from 'react';\r\nimport './HomePage.scss';\r\nimport { Link } from 'react-router-dom';\r\nconst video = require('./background-vid.mp4');\r\n\r\nconst HomePage: React.FC = () => {\r\n  return (\r\n    <div className=\"homepage\">\r\n      <video autoPlay muted loop id=\"back-vid\">\r\n        <source src={video} type=\"video/mp4\" />\r\n      </video>\r\n      <div className=\"homepage__container\">\r\n        <header>Find party for the event</header>\r\n        <div className=\"homepage__buttons\">\r\n          <Link to=\"/events/create\" className=\"btn\">\r\n            <p>Create event</p>\r\n          </Link>\r\n          <Link to=\"/feed\" className=\"btn\">\r\n            <p>Find event</p>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Drawer, List, ListItem, ListItemText } from '@material-ui/core';\r\nimport DynamicFeedIcon from '@material-ui/icons/DynamicFeed';\r\nimport SettingsApplicationsRoundedIcon from '@material-ui/icons/SettingsApplicationsRounded';\r\nimport AccountCircleRoundedIcon from '@material-ui/icons/AccountCircleRounded';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport { ILink } from '../../types/types';\r\n\r\ninterface IDrawer {\r\n  userID: string;\r\n  drawerOpened: boolean;\r\n  toggleDrawer: (\r\n    open: boolean\r\n  ) => (event: React.KeyboardEvent<Element> | React.MouseEvent<Element, MouseEvent>) => void;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250\r\n  },\r\n  paper: {\r\n    backgroundColor: 'rgb(52, 52, 61)',\r\n    color: 'white'\r\n  }\r\n});\r\n\r\nconst SideBar: React.FC<IDrawer> = ({ userID, drawerOpened, toggleDrawer }) => {\r\n  const classes = useStyles();\r\n\r\n  const SideLinks: Array<ILink> = [\r\n    {\r\n      title: 'My profile',\r\n      path: '/users/' + userID,\r\n      icon: <AccountCircleRoundedIcon style={{ color: 'white' }} />\r\n    },\r\n    { title: 'Feed', path: '/feed', icon: <DynamicFeedIcon style={{ color: 'white' }} /> },\r\n    { title: 'Create event', path: '/events/create', icon: <AddCircleIcon style={{ color: 'white' }} /> },\r\n    { title: 'Settings', path: '/settings', icon: <SettingsApplicationsRoundedIcon style={{ color: 'white' }} /> }\r\n  ];\r\n\r\n  const sideList = () => (\r\n    <div className={classes.list} role=\"presentation\" onClick={toggleDrawer(false)} onKeyDown={toggleDrawer(false)}>\r\n      <List>\r\n        {SideLinks.map((item) => (\r\n          <NavLink to={item.path} key={item.title} activeStyle={{ color: '#b1b1c7' }}>\r\n            <ListItem button>\r\n              <ListItemIcon>{item.icon}</ListItemIcon>\r\n              <ListItemText primary={item.title} />\r\n            </ListItem>\r\n          </NavLink>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Drawer open={drawerOpened} onClose={toggleDrawer(false)} classes={{ paper: classes.paper }}>\r\n      {sideList()}\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import React from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { AppBar, Toolbar, Typography, IconButton, MenuItem, Menu } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    menuButton: {\r\n      marginRight: theme.spacing(2)\r\n    },\r\n    title: {\r\n      flexGrow: 1\r\n    }\r\n  })\r\n);\r\n\r\ninterface ITopBar {\r\n  setUser: ({ username, id }: { username: string; id: string }) => void;\r\n  userID: string;\r\n  toggleDrawer: (\r\n    open: boolean\r\n  ) => (event: React.KeyboardEvent<Element> | React.MouseEvent<Element, MouseEvent>) => void;\r\n  news?: string;\r\n}\r\n\r\nconst TopBar: React.FC<ITopBar> = ({ setUser, toggleDrawer, userID, news = '' }) => {\r\n  const history = useHistory();\r\n\r\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleLogOut = () => {\r\n    handleClose();\r\n    sessionStorage.removeItem('id');\r\n    sessionStorage.removeItem('username');\r\n    setUser({\r\n      username: '',\r\n      id: ''\r\n    });\r\n    history.push('/login');\r\n  };\r\n\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  return (\r\n    <AppBar position=\"absolute\" style={{ backgroundColor: 'rgb(52, 52, 61)' }} variant=\"outlined\">\r\n      <Toolbar>\r\n        <IconButton\r\n          edge=\"start\"\r\n          className={classes.menuButton}\r\n          color=\"inherit\"\r\n          aria-label=\"menu\"\r\n          onClick={toggleDrawer(true)}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          {news}\r\n        </Typography>\r\n        <div>\r\n          <IconButton\r\n            aria-label=\"account of current user\"\r\n            aria-controls=\"menu-appbar\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleMenu}\r\n            color=\"inherit\"\r\n          >\r\n            <AccountCircle />\r\n          </IconButton>\r\n          <Menu\r\n            id=\"menu-appbar\"\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'right'\r\n            }}\r\n            keepMounted\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'right'\r\n            }}\r\n            open={open}\r\n            onClose={handleClose}\r\n          >\r\n            <MenuItem onClick={handleClose} component={Link} to={'/users/' + userID}>\r\n              Profile\r\n            </MenuItem>\r\n            <MenuItem onClick={handleLogOut}>Sign out</MenuItem>\r\n          </Menu>\r\n        </div>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default TopBar;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navigation.scss';\r\nimport SideBar from '../SideBar/SideBar';\r\nimport TopBar from '../TopBar/TopBar';\r\n\r\ninterface INavigation {\r\n  userID: string;\r\n  setUser: ({ username, id }: { username: string; id: string }) => void;\r\n}\r\n\r\nconst Navigation: React.FC<INavigation> = ({ userID, setUser }) => {\r\n  const [drawerOpened, setDrawerOpened] = React.useState(false);\r\n\r\n  const toggleDrawer = (open: boolean) => (event: React.KeyboardEvent | React.MouseEvent) => {\r\n    if (\r\n      event.type === 'keydown' &&\r\n      ((event as React.KeyboardEvent).key === 'Tab' || (event as React.KeyboardEvent).key === 'Shift')\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setDrawerOpened(open);\r\n  };\r\n\r\n  return userID ? (\r\n    <div style={{ flexGrow: 1 }}>\r\n      <SideBar userID={userID} drawerOpened={drawerOpened} toggleDrawer={toggleDrawer} />\r\n      <TopBar userID={userID} setUser={setUser} toggleDrawer={toggleDrawer} />\r\n    </div>\r\n  ) : (\r\n    <nav>\r\n      <div className=\"nav__account\">\r\n        {[\r\n          { path: '/register', content: 'Register' },\r\n          { path: '/login', content: 'Sign in' }\r\n        ].map((link, index) => {\r\n          return (\r\n            <Link to={link.path} key={index}>\r\n              <div>{link.content}</div>\r\n            </Link>\r\n          );\r\n        })}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default React.memo(Navigation);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\ninterface IProtectedRoute {\r\n  component: React.ElementType;\r\n  exact: boolean;\r\n  path: string;\r\n  userID: string;\r\n  rest?: any;\r\n}\r\n\r\nconst ProtectedRoute: React.FC<IProtectedRoute> = ({ userID, component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (userID) {\r\n          return <Component {...props} userID={userID} />;\r\n        } else {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: '/login',\r\n                state: {\r\n                  from: props.location\r\n                }\r\n              }}\r\n            />\r\n          );\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { useContext } from 'react';\r\nimport Form from '../../components/Form/Form';\r\nimport { Section, IBaseValidation } from '../../types/types';\r\nimport { useFormik } from 'formik';\r\nimport { UserContext } from '../../App';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { SERVER_URL } from '../../vars';\r\n\r\nconst sections: Section[] = [\r\n  {\r\n    title: 'Main information',\r\n    fields: [\r\n      { placeholder: 'Event title', name: 'title' },\r\n      { placeholder: 'Contact', name: 'contact' }\r\n    ]\r\n  },\r\n  {\r\n    title: 'Additional info',\r\n    fields: [{ placeholder: 'Event description', name: 'description', twoColumns: true, multiline: 6 }]\r\n  },\r\n  {\r\n    title: 'Location information',\r\n    fields: [\r\n      { placeholder: 'Country', name: 'country' },\r\n      { placeholder: 'City', name: 'city' }\r\n    ]\r\n  }\r\n];\r\n\r\nconst validate = ({ title, contact, country, city, description }: IBaseValidation) => {\r\n  const errors = {\r\n    title: '',\r\n    contact: '',\r\n    country: '',\r\n    city: '',\r\n    description: ''\r\n  };\r\n\r\n  if (description.length > 265) {\r\n    errors.description = 'Length must be 265 characters or less';\r\n  } else {\r\n    delete errors.description;\r\n  }\r\n\r\n  if (!title) {\r\n    errors.title = 'Required field';\r\n  } else if (title.length < 5) {\r\n    errors.title = 'Length must be at least 5 characters';\r\n  } else if (title.length > 24) {\r\n    errors.title = 'Length must be 24 characters or less';\r\n  } else {\r\n    delete errors.title;\r\n  }\r\n\r\n  if (!contact) {\r\n    errors.contact = 'Required field';\r\n  } else if (contact.length < 5) {\r\n    errors.contact = 'Length must be at least 5 characters';\r\n  } else if (contact.length > 24) {\r\n    errors.contact = 'Length must be 24 characters or less';\r\n  } else {\r\n    delete errors.contact;\r\n  }\r\n\r\n  if (!country) {\r\n    errors.country = 'Required field';\r\n  } else if (country.length > 24) {\r\n    errors.country = 'Length must be 24 characters or less';\r\n  } else {\r\n    delete errors.country;\r\n  }\r\n\r\n  if (!city) {\r\n    errors.city = 'Required field';\r\n  } else if (city.length > 24) {\r\n    errors.city = 'Length must be 24 characters or less';\r\n  } else {\r\n    delete errors.city;\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nconst CreateEvent: React.FC = () => {\r\n  const user = useContext(UserContext);\r\n  const history = useHistory();\r\n  const formik = useFormik<IBaseValidation>({\r\n    initialValues: {\r\n      title: '',\r\n      contact: '',\r\n      description: '',\r\n      country: '',\r\n      city: ''\r\n    },\r\n    validate: (values) => validate(values),\r\n    onSubmit: ({ title, contact, description, country, city }, { setSubmitting }) => {\r\n      fetch(SERVER_URL + '/api/events/create', {\r\n        method: 'post',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          title,\r\n          contact,\r\n          country,\r\n          city,\r\n          description,\r\n          creatorID: user.id,\r\n          creatorName: user.username\r\n        })\r\n      })\r\n        .then((r) => r.json())\r\n        .then((data) => {\r\n          setSubmitting(false);\r\n          history.push(`/events/${data}`);\r\n        });\r\n    }\r\n  });\r\n  return <Form formik={formik} headTitle=\"Create your own event!\" submitButtonText=\"Create\" sections={sections} />;\r\n};\r\n\r\nexport default CreateEvent;\r\n","import React, { useEffect, useState } from 'react';\r\nimport CommentsBlock from '../CommentsBlock/CommentsBlock';\r\nimport NotFound from '../NotFound/NotFound';\r\nimport './EventPage.scss';\r\n\r\ninterface IEventProps {\r\n  eventID: string;\r\n  userID: string;\r\n}\r\n\r\ninterface IEventState {\r\n  title: string;\r\n  contact: string;\r\n  description: string;\r\n  country: string;\r\n  city: string;\r\n  creatorID: string;\r\n  creatorName: string;\r\n  id: string;\r\n}\r\n\r\nconst EventPage: React.FC<IEventProps> = ({ eventID, userID }) => {\r\n  const [event, setEvent] = useState<IEventState>({\r\n    title: '',\r\n    contact: '',\r\n    description: '',\r\n    country: '',\r\n    city: '',\r\n    creatorID: '',\r\n    creatorName: '',\r\n    id: ''\r\n  });\r\n  const [isEnrolled, setIsEndrolled] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:8000/api/events/info/${eventID}`, {\r\n      method: 'get',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    })\r\n      .then((r) => r.json())\r\n      .then((data) => {\r\n        if (data.enrolledusers.includes(userID)) {\r\n          setIsEndrolled(true);\r\n        }\r\n        setEvent(data);\r\n      });\r\n  }, [eventID, userID]);\r\n\r\n  const handleEnroll = () => {\r\n    fetch(`http://localhost:8000/api/events/enroll`, {\r\n      method: 'put',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        eventID: event.id,\r\n        userID: userID\r\n      })\r\n    })\r\n      .then((r) => r.json())\r\n      .then((data) => {\r\n        setIsEndrolled(true);\r\n      });\r\n  };\r\n\r\n  const { title, country, city, contact, description, creatorName } = event;\r\n\r\n  if (!title) {\r\n    return <NotFound errorMessage=\"Can't find this event!\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"eventPage-container\">\r\n      <div className=\"eventPage-box\">\r\n        <div className=\"box_head\">\r\n          <p>{contact}</p>\r\n          <div className=\"head_title-creator\">\r\n            <h2>{title}</h2>\r\n            <p>{creatorName}</p>\r\n          </div>\r\n          <p>\r\n            {country}, {city}\r\n          </p>\r\n        </div>\r\n        <div className=\"box_description\">{description}</div>\r\n        {userID ? (\r\n          <button className=\"submit-button box_enroll-button\" disabled={isEnrolled} onClick={handleEnroll}>\r\n            <span>{isEnrolled ? 'Already enrolled' : 'Enroll'}</span>\r\n          </button>\r\n        ) : null}\r\n        <CommentsBlock target={{ name: 'events', id: eventID }} loadingMarginTop=\"50px\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventPage;\r\n","import React, { useEffect } from 'react';\r\nimport Form from '../../components/Form/Form';\r\nimport { useFormik } from 'formik';\r\nimport { Section, IBaseValidation } from '../../types/types';\r\nimport { SERVER_URL } from '../../vars';\r\n\r\nconst sections: Section[] = [\r\n  {\r\n    fields: [{ placeholder: 'Description', name: 'description', twoColumns: true, multiline: 6 }]\r\n  }\r\n];\r\n\r\nconst validate = (values: IBaseValidation) => {\r\n  const errors = {\r\n    description: ''\r\n  };\r\n  const { description } = values;\r\n  if (description.length > 265) {\r\n    errors.description = 'Description length must be 265 or less characters';\r\n  } else {\r\n    delete errors.description;\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nconst SettingsPage: React.FC<{ userID: string }> = ({ userID }) => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      description: ''\r\n    },\r\n    validate: (values) => validate(values),\r\n    onSubmit: ({ description }, { setSubmitting }) => {\r\n      fetch(SERVER_URL + `/api/users/settings`, {\r\n        method: 'put',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          userID,\r\n          description\r\n        })\r\n      })\r\n        .then((r) => r.json())\r\n        .then((data) => {\r\n          setSubmitting(false);\r\n        });\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetch(SERVER_URL + `/api/users/${userID}`, {\r\n      method: 'get',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    })\r\n      .then((r) => r.json())\r\n      .then(({ description }) => {\r\n        formik.setValues({ description });\r\n      });\r\n    // eslint-disable-next-line\r\n  }, [userID]);\r\n\r\n  return <Form headTitle=\"Profile settings\" sections={sections} submitButtonText={'Apply'} formik={formik} />;\r\n};\r\n\r\nexport default SettingsPage;\r\n","import React, { lazy, Suspense, useState, createContext } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n// Importing interfaces\nimport { IFormProps, IUserProfileProps, INotFound, IAuthUser } from './types/types';\n// Importing components\nimport HomePage from './components/HomePage/HomePage';\nimport Navigation from './components/Navigation/Navigation';\nimport Loading from './components/Loading/Loading';\nimport ProtectedRoute from './ProtectedRoute';\nimport CreateEvent from './containers/CreateEvent/CreateEvent';\nimport EventPage from './components/EventPage/EventPage';\nimport SettingPage from './containers/SettingsPage/SettingsPage';\n\nconst NotFound: React.FC<INotFound> = lazy(() => import('./components/NotFound/NotFound'));\nconst Feed: React.FC = lazy(() => import('./containers/Feed/Feed'));\nconst UserProfile: React.FC<IUserProfileProps> = lazy(() => import('./containers/UserProfile/UserProfile'));\nconst Register: React.FC<IFormProps> = lazy(() => import('./containers/Register/Register'));\nconst Login: React.FC<IFormProps> = lazy(() => import('./containers/Login/Login'));\n\nconst initialUser = {\n  id: sessionStorage.getItem('id') || '',\n  username: sessionStorage.getItem('username') || ''\n};\n\nexport const UserContext = createContext(initialUser);\n\nconst App: React.FC = () => {\n  const [user, setUser] = useState<IAuthUser>(initialUser);\n\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Navigation userID={user.id} setUser={setUser} />\n      <Suspense fallback={<Loading />}>\n        <UserContext.Provider value={user}>\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route exact path=\"/register\" render={(props) => <Register {...props} setUser={setUser} user={user} />} />\n            <Route exact path=\"/login\" render={(props) => <Login {...props} setUser={setUser} user={user} />} />\n            <ProtectedRoute exact path=\"/feed\" component={Feed} userID={user.id} />\n            <ProtectedRoute exact path=\"/events/create\" component={CreateEvent} userID={user.id} />\n            <ProtectedRoute exact path=\"/settings\" component={SettingPage} userID={user.id} />\n            <Route\n              exact\n              path=\"/events/:id\"\n              render={({ match }) => <EventPage eventID={match.params.id} userID={user.id} />}\n            />\n            <Route\n              exact\n              path=\"/users/:id\"\n              render={({ match }) => <UserProfile userID={match.params.id} user={user} />}\n            />\n            {/* \"not found\" route */}\n            <Route exact path=\"*\" render={() => <NotFound errorMessage=\"Ooops... 404 NOT FOUND\" />} />\n          </Switch>\n        </UserContext.Provider>\n      </Suspense>\n    </BrowserRouter>\n  );\n};\nexport default App;\n","import React, { useEffect, useState, useContext, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport TextInput from '../TextInput/TextInput';\r\nimport { UserContext } from '../../App';\r\nimport { TComment } from '../../types/types';\r\nimport Loading from '../Loading/Loading';\r\nimport './CommentBlock.scss';\r\nimport { SERVER_URL } from '../../vars';\r\n\r\ninterface ICommentBlockProps {\r\n  target: {\r\n    name: 'users' | 'events';\r\n    id: string;\r\n  };\r\n  loadingMarginTop?: string;\r\n}\r\n\r\nconst CommentsBlock: React.FC<ICommentBlockProps> = ({ target, loadingMarginTop }) => {\r\n  const user = useContext(UserContext);\r\n  const [profileComments, setProfileComments] = useState<Array<TComment>>([]);\r\n  const [fetching, setFetching] = useState(true);\r\n  const [comment, setComment] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetch(SERVER_URL + `/api/${target.name}/comments/${target.id}`, {\r\n      method: 'get',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    })\r\n      .then((r) => r.json())\r\n      .then((data) => {\r\n        setFetching(false);\r\n        setProfileComments(data);\r\n      });\r\n  }, [target]);\r\n\r\n  const handleSendComment = () => {\r\n    if (comment.length < 1) {\r\n      return;\r\n    }\r\n\r\n    fetch(SERVER_URL + `/api/${target.name}/comments/`, {\r\n      method: 'post',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        content: comment,\r\n        senderName: user.username,\r\n        senderID: user.id,\r\n        targetID: target.id\r\n      })\r\n    })\r\n      .then((r) => r.json())\r\n      .then((data) => {\r\n        const commentsClone = [...profileComments];\r\n        commentsClone.unshift({ senderName: user.username, content: comment, senderID: user.id });\r\n        setProfileComments(commentsClone);\r\n      });\r\n  };\r\n\r\n  if (fetching) {\r\n    return (\r\n      <Loading backgroundColor=\"transparent\" containerHeight=\"100%\" spinnerSize=\"50px\" marginTop={loadingMarginTop} />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"comments\">\r\n      <h4>Comments</h4>\r\n      <div className=\"comments_block\">\r\n        {profileComments.length < 1 ? (\r\n          <h1 className=\"no-comments\">No comments found</h1>\r\n        ) : (\r\n          <Fragment>\r\n            {profileComments.map((comment, index) => {\r\n              return (\r\n                <div className=\"comment\" key={index}>\r\n                  <div className=\"comment-content\">\r\n                    <Link to={`/users/${comment.senderID}`}>\r\n                      <h5>{comment.senderName}</h5>\r\n                    </Link>\r\n                    <p>{comment.content}</p>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n      {user.id ? (\r\n        <Fragment>\r\n          <TextInput placeholder=\"Write your comment...\" handleChange={(event) => setComment(event.target.value)} />\r\n          <div style={{ display: 'flex', alignItems: 'center', marginTop: '6px' }}>\r\n            <button className=\"comment-submit\" onClick={handleSendComment} disabled={comment.length > 265}>\r\n              Send\r\n            </button>\r\n            {comment.length > 265 ? (\r\n              <div className=\"error\" style={{ marginLeft: '10px' }}>\r\n                Max. comment length: 265.\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </Fragment>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(CommentsBlock);\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { INotFound } from '../../types/types';\r\nimport './NotFound.scss';\r\n\r\nconst ErrorScreen: React.FC<INotFound> = ({ errorMessage }) => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"not_found_container\">\r\n      <span className=\"not_found_error\">{errorMessage}</span>\r\n      <span onClick={() => history.goBack()} className=\"not_found_go_home\">\r\n        Go back\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorScreen;\r\n"],"sourceRoot":""}