{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","containers/Register/Register.tsx"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","validateBase","username","password","errors","sections","title","fields","placeholder","name","React","memo","user","setUser","location","formik","useFormik","initialValues","firstName","lastName","city","country","error","validate","values","onSubmit","props","setSubmitting","setValues","fetch","method","headers","body","JSON","stringify","then","r","json","data","id","details","to","pathname","state","from","headTitle","submitButtonText","subTitle"],"mappings":"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","file":"static/js/6.28846b72.chunk.js","sourcesContent":["import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React, { Fragment } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useFormik } from 'formik';\r\nimport { IBaseValidation, IFormProps, Section } from '../../types/types';\r\nimport Form from '../../components/Form/Form';\r\n\r\nexport const validateBase = ({ username, password }: IBaseValidation) => {\r\n  const errors: IBaseValidation = {\r\n    username: '',\r\n    password: ''\r\n  };\r\n  if (!username) {\r\n    errors.username = 'Required field';\r\n  } else if (username.length < 5) {\r\n    errors.username = 'Length must be at least 5 characters';\r\n  } else if (username.length > 24) {\r\n    errors.username = 'Length must be 24 characters or less';\r\n  } else {\r\n    delete errors.username;\r\n  }\r\n\r\n  if (!password) {\r\n    errors.password = 'Required field';\r\n  } else if (password.length < 6) {\r\n    errors.password = 'Length must be at least 6 characters';\r\n  } else {\r\n    delete errors.password;\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nconst sections: Section[] = [\r\n  {\r\n    title: 'Login information',\r\n    fields: [\r\n      { placeholder: 'Username', name: 'username' },\r\n      { placeholder: 'Password', name: 'password' }\r\n    ]\r\n  },\r\n  {\r\n    title: 'Location information',\r\n    fields: [\r\n      { placeholder: 'Country', name: 'country' },\r\n      { placeholder: 'City', name: 'city' }\r\n    ]\r\n  },\r\n  {\r\n    title: 'Personal information',\r\n    fields: [\r\n      { placeholder: 'First Name', name: 'firstName' },\r\n      { placeholder: 'Last Name', name: 'lastName' }\r\n    ]\r\n  }\r\n];\r\n\r\nconst Register: React.FC<IFormProps> = ({ user, setUser, location }) => {\r\n  const formik = useFormik<IBaseValidation>({\r\n    initialValues: {\r\n      firstName: '',\r\n      lastName: '',\r\n      username: '',\r\n      password: '',\r\n      city: '',\r\n      country: '',\r\n      error: ''\r\n    },\r\n    validate: (values) => validateBase(values),\r\n    onSubmit: (props, { setSubmitting, setValues }) => {\r\n      const { username, country, city, password, firstName, lastName } = props;\r\n      fetch('http://localhost:8000/api/register', {\r\n        method: 'post',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          username,\r\n          password,\r\n          country,\r\n          city,\r\n          firstName,\r\n          lastName\r\n        })\r\n      })\r\n        .then((r) => r.json())\r\n        .then((data) => {\r\n          if (data.id) {\r\n            setUser({ id: data.id, username: data.username });\r\n          } else if (data.error) {\r\n            setSubmitting(false);\r\n            setValues({ ...props, error: data.error.details });\r\n          }\r\n        });\r\n    }\r\n  });\r\n\r\n  if (user.id) {\r\n    return <Redirect to={{ pathname: `/users/${user.id}`, state: { from: location } }} />;\r\n  }\r\n\r\n  return (\r\n    <Form\r\n      formik={formik}\r\n      headTitle=\"Join us now!\"\r\n      submitButtonText=\"Register\"\r\n      subTitle={\r\n        <Fragment>\r\n          Already registered?{' '}\r\n          <Link to=\"/login\">\r\n            <span>Sign in!</span>\r\n          </Link>\r\n        </Fragment>\r\n      }\r\n      sections={sections}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(Register);\r\n"],"sourceRoot":""}