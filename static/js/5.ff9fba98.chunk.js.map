{"version":3,"sources":["containers/UserProfile/UserProfile.tsx"],"names":["React","memo","userID","useState","username","country","city","firstName","lastName","description","enrolled","created","userProfile","setUserProfile","err","setErr","useEffect","fetch","SERVER_URL","method","headers","then","r","json","data","getField","arg1","arg2","coma","errorMessage","className","target","id","name"],"mappings":"kNAoFeA,cAAMC,MAtE4B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAAa,EACzBC,mBAA4B,CAChEC,SAAU,GACVC,QAAS,GACTC,KAAM,GACNC,UAAW,GACXC,SAAU,GACVC,YAAa,GACbC,SAAU,EACVC,QAAS,IAToD,mBACxDC,EADwD,KAC3CC,EAD2C,OAYzCV,oBAAS,GAZgC,mBAYxDW,EAZwD,KAYnDC,EAZmD,KAc/DC,qBAAU,WACRC,MAAMC,IAAU,qBAAiBhB,GAAU,CACzCiB,OAAQ,MACRC,QAAS,CAAE,eAAgB,sBAE1BC,MAAK,SAACC,GAAD,OAAOA,EAAEC,UACdF,MAAK,SAACG,GACQ,mBAATA,GACFT,GAAO,GAETF,EAAeW,QAElB,CAACtB,IAEJ,IAAMuB,EAAW,SAACC,EAAcC,EAAcC,GAC5C,OAAOF,EAAQC,EAAI,UAAMD,GAAN,OAAaE,EAAO,IAAM,IAA1B,YAAiCD,GAASD,EAAQ,IAGvE,GAAIZ,EACF,OAAO,kBAAC,UAAD,CAAUe,aAAa,oBAjC+B,IAoCvDzB,EAAiFQ,EAAjFR,SAAUC,EAAuEO,EAAvEP,QAASC,EAA8DM,EAA9DN,KAAMC,EAAwDK,EAAxDL,UAAWC,EAA6CI,EAA7CJ,SAAUG,EAAmCC,EAAnCD,QAASD,EAA0BE,EAA1BF,SAAUD,EAAgBG,EAAhBH,YAEzE,OAAKL,EAKH,yBAAK0B,UAAU,gBACb,6BAASA,UAAU,gBACjB,yBAAKA,UAAU,QACb,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,kBAAkB1B,GAChC,wBAAI0B,UAAU,kBAAkBL,EAASpB,EAASC,GAAM,KAE1D,4BAAKmB,EAASlB,EAAWC,GAAU,IACnC,2BAAIC,GACJ,yBAAKqB,UAAU,iBACb,yBAAKA,UAAU,SACb,0CAAgBnB,IAElB,yBAAKmB,UAAU,SACb,2CAAiBpB,OAKzB,kBAAC,IAAD,CAAeqB,OAAQ,CAAEC,GAAI9B,EAAQ+B,KAAM,aAzBxC,kBAAC,IAAD","file":"static/js/5.ff9fba98.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Loading from '../../components/Loading/Loading';\r\nimport NotFound from '../../components/NotFound/NotFound';\r\nimport { IUserProfileProps, IUserProfileBase } from '../../types/types';\r\nimport CommentsBlock from '../../components/CommentsBlock/CommentsBlock';\r\n\r\nimport './UserProfile.scss';\r\nimport { SERVER_URL } from '../../vars';\r\n\r\ninterface IUserProfileState extends IUserProfileBase {\r\n  enrolled: number;\r\n  created: number;\r\n}\r\n\r\nconst UserProfile: React.FC<IUserProfileProps> = ({ userID }) => {\r\n  const [userProfile, setUserProfile] = useState<IUserProfileState>({\r\n    username: '',\r\n    country: '',\r\n    city: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    description: '',\r\n    enrolled: 0,\r\n    created: 0\r\n  });\r\n\r\n  const [err, setErr] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(SERVER_URL + `/api/users/${userID}`, {\r\n      method: 'get',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    })\r\n      .then((r) => r.json())\r\n      .then((data) => {\r\n        if (data === 'User not found') {\r\n          setErr(true);\r\n        }\r\n        setUserProfile(data);\r\n      });\r\n  }, [userID]);\r\n\r\n  const getField = (arg1: string, arg2: string, coma: boolean): string => {\r\n    return arg1 ? (arg2 ? `${arg1}${coma ? ',' : ' '} ${arg2}` : arg1) : '';\r\n  };\r\n\r\n  if (err) {\r\n    return <NotFound errorMessage=\"User not found!\" />;\r\n  }\r\n\r\n  const { username, country, city, firstName, lastName, created, enrolled, description } = userProfile;\r\n\r\n  if (!username) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"profile-page\">\r\n      <section className=\"profile-card\">\r\n        <div className=\"info\">\r\n          <div className=\"profile-avatar\"></div>\r\n          <div className=\"profile-info\">\r\n            <div className=\"profile__head\">\r\n              <h2 className=\"head__username\">{username}</h2>\r\n              <h2 className=\"head__location\">{getField(country, city, true)}</h2>\r\n            </div>\r\n            <h3>{getField(firstName, lastName, false)}</h3>\r\n            <p>{description}</p>\r\n            <div className=\"badge-section\">\r\n              <div className=\"badge\">\r\n                <span>Created: {created}</span>\r\n              </div>\r\n              <div className=\"badge\">\r\n                <span>Enrolled: {enrolled}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <CommentsBlock target={{ id: userID, name: 'users' }} />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(UserProfile);\r\n"],"sourceRoot":""}